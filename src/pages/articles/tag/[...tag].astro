---
import MainLayout from "../../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
// import {formatDate} from "../../utils";
import ArticleCard from "../../../components/ArticleCard.astro";
import { capitalize } from "../../../utils";

/*------------------------------------*/
// el tag recibido como parametro
const { tag } = Astro.params;
if (!tag) {
  throw new Error("Tag not found");
}
/*------------------------------------*/

const allBlogArticles: CollectionEntry<"blog">[] = (await getCollection("blog")).sort(
  (a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
);

/* const allBlogArticles: CollectionEntry<"blog">[] = (await getCollection("blog"))
  .sort((a:CollectionEntry<'blog'>, b:CollectionEntry<'blog'>) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()); */

// obtener los articulos con el tag recibido como parametro
const tagArticles = allBlogArticles.filter(article => article.data.tags.includes(tag));

---

<MainLayout>
    <!-- <section class="container mx-auto max-w-screen-xl mt-10 px-8"> -->
    <a href="/articles" class="inline-block bg-gray-100 p-2 mb-6 hover:bg-indigo-500 hover:text-white">Back To Articles</a>

        <h1 class="text-2xl pb-3">Tag: #{capitalize(tag)}</h1>
        <!-- Main Grid -->
        <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
          {tagArticles.map((article) => (
            <ArticleCard article={article} />
          ))}
        </div>
</MainLayout>